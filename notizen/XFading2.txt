=== XFading === (03-Jul-10)

(d.h. mit Verdopplung der Synths)

- Einführung einer "legacy" group ; erzwungen innerhalb der playGroup
- damit : Entscheidung für alle Operationen, ob diese auch auf die Legacy Group anzuwenden sind.
(falls ja: messages werden an playGroup gesendet (playGroup.getOrElse( group.getOrElse( defaultGroup ))
(falls nein: werden nur an neuen synth gesendet / falls zu kompliziert: zweite hilfsgruppe "current"
 innerhalb von playGroup)

actions at the moment
---------------------

n_set : sollte nur "current" gelten (um diskontinuitäten zu vermeiden)  [ OK ]
n_map : ebenso     [ !CURRENTLY RELIES ON PLAYGROUP! ]
// --> target.proc.group.mapn could be replaced by target.proc.currentGroup (lazy) ...
unmap : sollte auf beide angewandt werden, damit resource-management überschaubar bleibt
// --> d.h. vom konzept her: resource-allocation immer nur auf current group
//     und deallocation auf beide
stop : beide
play : nur current
disconnect bus : beide
connect bus : nur current. !!!!achtung: wenn dadurch ein alter bus disconnected würde,
   muß der entsprechend für die legacy group auf einen dummy gesetzt werden
   (d.h. wir müssen noch einen read- bzw. write-access verwalten!!!!
	// EINFACHER : vorher disconnect wie o.g. anwenden

und das war's bereits. es fehlen noch:
- glide (ramp)
- bypass ?


=== transition matrix (control.value_=) === (04-Jul-10)

old trns	new trns	resolution
------------------------------------------
instant		instant		instant if( oldValue != newValue)
instant		glide		glide   if( oldValue != newValue)
instant		xfade		xfade   if( oldValue != newValue)

glide		instant		stop glide + instant
glide		glide		stop glide + glide
glide		xfade		xfade

xfade		instant		instant if( oldValue != newValue)
xfade		glide		glide   if( oldValue != newValue)
xfade		xfade		xfade

d.h. für target instant und glide : wird xfade quasi als instant behandelt und einfach glide gestoppt
für xfade target tritt der sonderfall ein, daß der xfade immer ausgeführt wird, außer falls die
alte transition instant war und denselben targetWert besitzt
; man könnte annehmen, daß für glide-quelle ebenfalls der vergleich (oldValue != newValue) gilt,
; allerdings kommen hier aufgrund der server/client latenz u.U. diskrepanzen zustande, so daß
; die neusetzung des wertes besser erzwungen wird. (siehe oben: instant könnte ggf. mit kleinem
glide erzeugt werden)


// 
since a Transition is txn-local, and we switch to using DSL methods instead of classes directly,
the transition object could carry its logical start time around!
